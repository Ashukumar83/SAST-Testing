import { ArgumentParser } from "argparse";
import { ScmResultsFormat, ScmType } from "../enums";
import { ArgumentParserBase, ICommonArguments } from "./ArgumentParserBase";
interface IContributorAuditArguments extends ICommonArguments {
    days: number;
    secret: string;
    saveResults: ScmResultsFormat;
    scmType: ScmType;
}
declare class ContributorAuditArgumentParser extends ArgumentParserBase {
    constructor(argumentParser: ArgumentParser);
    static create(): ContributorAuditArgumentParser;
    addBaseContributorArguments(): void;
    parseArguments(): import("./ContributorAuditService/providers/GitHub/GitHubContributorAuditProvider").IGitHubContributorAuditArguments | import("./ContributorAuditService/providers/BitbucketCloud/BitbucketCloudContributorAuditProvider").IBitBucketContributorAuditArguments;
}
export default ContributorAuditArgumentParser;
export { IContributorAuditArguments };
