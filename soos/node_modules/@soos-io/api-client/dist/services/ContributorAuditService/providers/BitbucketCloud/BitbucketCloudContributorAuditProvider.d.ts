import { ArgumentParser } from "argparse";
import { IContributorAuditModel } from "../../../../api/SOOSHooksApiClient";
import { IContributorAuditProvider } from "../../ContributorAuditService";
import { IContributorAuditArguments } from "../../../ContributorAuditArgumentParser";
interface IBitBucketContributorAuditArguments extends IContributorAuditArguments {
    username: string;
    workspace: string;
}
declare class BitbucketCloudContributorAuditProvider implements IContributorAuditProvider {
    audit(implementationParams: Record<string, string | number>): Promise<IContributorAuditModel>;
    static addProviderArgs(argumentParser: ArgumentParser): void;
    static parseArgs(argumentParser: ArgumentParser): IBitBucketContributorAuditArguments;
    private getBitbucketCloudRepositoryContributors;
}
export default BitbucketCloudContributorAuditProvider;
export { IBitBucketContributorAuditArguments };
