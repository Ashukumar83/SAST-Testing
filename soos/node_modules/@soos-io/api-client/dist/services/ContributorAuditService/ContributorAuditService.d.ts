import SOOSHooksApiClient, { IContributorAuditModel } from "../../api/SOOSHooksApiClient";
import { ScmResultsFormat, ScmType } from "../../enums";
export interface IContributorAuditProvider {
    audit(implementationParams: Record<string, string | number>): Promise<IContributorAuditModel>;
}
declare class ContributorAuditService {
    private auditProvider;
    hooksApiClient: SOOSHooksApiClient;
    constructor(auditProvider: IContributorAuditProvider, hooksApiClient: SOOSHooksApiClient);
    static create(apiKey: string, apiURL: string, scmType: ScmType): ContributorAuditService;
    audit(implementationParams: Record<string, string | number>): Promise<IContributorAuditModel>;
    uploadContributorAudits(clientHash: string, contributorAudit: IContributorAuditModel): Promise<void>;
    saveResults(results: IContributorAuditModel, format: ScmResultsFormat): Promise<void>;
    private saveResultsAsJSON;
    private saveResultsAsTXT;
    private validateCommonParams;
}
export default ContributorAuditService;
