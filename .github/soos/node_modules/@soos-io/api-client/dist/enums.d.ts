export declare enum ContributingDeveloperSource {
    Unknown = "Unknown",
    GitHubWebhook = "GitHubWebhook",
    EnvironmentVariable = "EnvironmentVariable",
    OperatingSystem = "OperatingSystem"
}
export declare enum IntegrationName {
    AzureDevOps = "AzureDevOps",
    AWSCodeBuild = "AWSCodeBuild",
    Bamboo = "Bamboo",
    BitBucket = "BitBucket",
    CircleCI = "CircleCI",
    CodeShip = "CodeShip",
    GithubActions = "GitHub",
    GitLab = "GitLab",
    Jenkins = "Jenkins",
    SoosCsa = "SoosCsa",
    SoosDast = "SoosDast",
    SoosSast = "SoosSast",
    SoosSca = "SoosSca",
    SoosSbom = "SoosSbom",
    TeamCity = "TeamCity",
    TravisCI = "TravisCI",
    VisualStudio = "VisualStudio",
    VisualStudioCode = "VisualStudioCode"
}
export declare enum IntegrationType {
    None = "None",
    IDE = "IDE",
    Script = "Script",
    Webhook = "Webhook",
    Plugin = "Plugin",
    AppRepo = "AppRepo",
    AppUpload = "AppUpload"
}
export declare enum PackageManagerType {
    Unknown = "Unknown",
    Alpine = "Alpine",
    CFamily = "CFamily",
    Dart = "Dart",
    Debian = "Debian",
    Docker = "Docker",
    Erlang = "Erlang",
    Fedora = "Fedora",
    Go = "Go",
    Homebrew = "Homebrew",
    Java = "Java",
    NPM = "NPM",
    NuGet = "NuGet",
    Php = "Php",
    Python = "Python",
    Ruby = "Ruby",
    Rust = "Rust",
    Swift = "Swift",
    Wolfi = "Wolfi"
}
export declare enum ManifestStatus {
    Unknown = "Unknown",
    Valid = "Valid",
    OnlyDevDependencies = "OnlyDevDependencies",
    OnlyLockFiles = "OnlyLockFiles",
    OnlyNonLockFiles = "OnlyNonLockFiles",
    NoPackages = "NoPackages",
    UnknownManifestType = "UnknownManifestType",
    UnsupportedManifestVersion = "UnsupportedManifestVersion",
    ParsingError = "ParsingError",
    Empty = "Empty"
}
export declare enum ScanStatus {
    Unknown = "Unknown",
    Queued = "Queued",
    Manifest = "Manifest",
    LocatingDependencies = "LocatingDependencies",
    LoadingPackageDetails = "LoadingPackageDetails",
    LocatingVulnerabilities = "LocatingVulnerabilities",
    RunningGovernancePolicies = "RunningGovernancePolicies",
    Finished = "Finished",
    FailedWithIssues = "FailedWithIssues",
    Incomplete = "Incomplete",
    Error = "Error"
}
export declare enum ScanType {
    CSA = "Csa",
    DAST = "Dast",
    SAST = "Sast",
    SBOM = "Sbom",
    SCA = "Sca"
}
export declare enum ScmResultsFormat {
    JSON = "JSON",
    TXT = "TXT"
}
export declare enum ScmType {
    GitHub = "GitHub",
    BitbucketCloud = "BitbucketCloud"
}
export declare enum SeverityEnum {
    Unknown = "Unknown",
    None = "None",
    Info = "Info",
    Low = "Low",
    Medium = "Medium",
    High = "High",
    Critical = "Critical"
}
export declare enum LogLevel {
    DEBUG = "DEBUG",
    INFO = "INFO",
    WARN = "WARN",
    FAIL = "FAIL",
    ERROR = "ERROR"
}
export declare enum OutputFormat {
    SARIF = "SARIF"
}
export declare enum OnFailure {
    Continue = "continue_on_failure",
    Fail = "fail_the_build"
}
