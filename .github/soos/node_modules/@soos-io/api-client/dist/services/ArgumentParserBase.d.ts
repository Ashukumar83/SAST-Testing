import { IntegrationType } from "../enums";
import { ArgumentParser } from "argparse";
import { IntegrationName, LogLevel, ScanType } from "../enums";
interface ICommonArguments {
    apiKey: string;
    apiURL: string;
    clientId: string;
    logLevel: LogLevel;
    scriptVersion: string;
    verbose: boolean;
}
declare abstract class ArgumentParserBase {
    argumentParser: ArgumentParser;
    protected scanType?: ScanType;
    protected scriptVersion: string;
    protected integrationName?: IntegrationName;
    protected integrationType?: IntegrationType;
    protected constructor(argumentParser: ArgumentParser, scanType?: ScanType, scriptVersion?: string, integrationName?: IntegrationName, integrationType?: IntegrationType);
    protected addCommonArguments(scriptVersion?: string, integrationName?: IntegrationName, integrationType?: IntegrationType): void;
    addEnumArgument(parser: ArgumentParser, argName: string, enumObject: Record<string, unknown>, options?: {}, allowMultipleValues?: boolean): void;
    parseArguments(): any;
    protected ensureRequiredArguments(args: any): void;
}
export { ArgumentParserBase, ICommonArguments };
