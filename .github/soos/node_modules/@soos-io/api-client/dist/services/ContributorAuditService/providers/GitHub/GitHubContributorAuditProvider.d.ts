import { ArgumentParser } from "argparse";
import { IContributorAuditModel } from "../../../../api/SOOSHooksApiClient";
import { IContributorAuditProvider } from "../../ContributorAuditService";
import { IContributorAuditArguments } from "../../../ContributorAuditArgumentParser";
interface IGitHubContributorAuditArguments extends IContributorAuditArguments {
    organizationName: string;
}
declare class GitHubContributorAuditProvider implements IContributorAuditProvider {
    audit(implementationParams: Record<string, string | number>): Promise<IContributorAuditModel>;
    static addProviderArgs(argumentParser: ArgumentParser): void;
    static parseArgs(argumentParser: ArgumentParser): IGitHubContributorAuditArguments;
    private getGitHubRepositoryContributors;
}
export default GitHubContributorAuditProvider;
export { IGitHubContributorAuditArguments };
