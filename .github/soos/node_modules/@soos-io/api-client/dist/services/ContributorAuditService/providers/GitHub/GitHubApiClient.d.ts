import { IContributorAuditRepositories } from "../../../../api/SOOSHooksApiClient";
export interface GitHubOrganization {
    login: string;
}
export interface GitHubRepository {
    id: number;
    name: string;
    full_name: string;
    private: boolean;
    owner: GitHubOrganization;
    pushed_at: string;
}
export interface GitHubCommits {
    commit: {
        author: GitHubAuthor;
    };
}
export interface GitHubAuthor {
    name: string;
    email: string;
    date: string;
}
declare class GitHubApiClient {
    private readonly client;
    private readonly organizationName;
    private readonly days;
    private readonly dateToFilter;
    constructor(days: number, gitHubPAT: string, organizationName: string, baseUri?: string);
    private static createHttpClient;
    private static handleNextPage;
    private static getNextPageUrl;
    getGitHubOrganizations(): Promise<GitHubOrganization[]>;
    getGitHubOrganizationRepositories(organization: GitHubOrganization): Promise<GitHubRepository[]>;
    getGitHubRepositoryContributors(repository: GitHubRepository): Promise<IContributorAuditRepositories[]>;
}
export default GitHubApiClient;
