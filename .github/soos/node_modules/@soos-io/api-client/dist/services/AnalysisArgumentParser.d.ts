import { ArgumentParser } from "argparse";
import { ContributingDeveloperSource, IntegrationName, IntegrationType, OnFailure, ScanType } from "../enums";
import { ArgumentParserBase, ICommonArguments } from "./ArgumentParserBase";
interface IBaseScanArguments extends ICommonArguments {
    appVersion: string;
    branchName: string;
    branchURI: string;
    buildURI: string;
    buildVersion: string;
    commitHash: string;
    contributingDeveloperId: string;
    contributingDeveloperSource: ContributingDeveloperSource;
    contributingDeveloperSourceName: string;
    integrationName: IntegrationName;
    integrationType: IntegrationType;
    onFailure: OnFailure;
    operatingEnvironment: string;
    projectName: string;
}
declare class AnalysisArgumentParser extends ArgumentParserBase {
    scanType: ScanType;
    scriptVersion: string;
    integrationName: IntegrationName;
    integrationType: IntegrationType;
    constructor(argumentParser: ArgumentParser, integrationName: IntegrationName, integrationType: IntegrationType, scanType: ScanType, scriptVersion: string);
    static create(integrationName: IntegrationName, integrationType: IntegrationType, scanType: ScanType, scriptVersion: string): AnalysisArgumentParser;
    addBaseScanArguments(): void;
}
export default AnalysisArgumentParser;
export { IBaseScanArguments, ICommonArguments };
