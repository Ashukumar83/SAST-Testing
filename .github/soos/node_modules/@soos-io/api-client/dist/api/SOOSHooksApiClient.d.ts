interface IContributorAuditMetadata {
    scriptVersion: string;
    days: number;
}
interface IContributorAuditModel {
    metadata: IContributorAuditMetadata;
    organizationName: string;
    contributors: IContributorAuditRepositories[];
}
interface IContributorAuditRepositories {
    username: string;
    repositories: IContributorAuditRepository[];
}
interface IContributorAuditRepository {
    id: string;
    name: string;
    lastCommit: string;
    isPrivate: boolean;
}
declare class SOOSHooksApiClient {
    private readonly baseUri;
    private readonly apiKey;
    private readonly client;
    constructor(apiKey: string, baseUri?: string);
    postContributorAudits(clientHash: string, contributorAudit: IContributorAuditModel): Promise<void>;
}
export { IContributorAuditModel, IContributorAuditMetadata, IContributorAuditRepositories, IContributorAuditRepository, };
export default SOOSHooksApiClient;
